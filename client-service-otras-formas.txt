SE LEVANTA EL SERVIDOR CON PROMESAS!!!

//AQUÍ ESTAMOS OCUPANDO CALLBACK
//Se está creando un callback hell 
//Es una forma de comunicarnos con el backend
//En esta sección se está creando la tabla dinámica con variables
const crearNuevaLinea = (nombre, email) => {
    const linea = document.createElement('tr')
    const contenido = 
`<td class="td" data-td>${nombre}</td>
    <td>${email}</td>
    <td>
        <ul class="table__button-control">
            <li>
                <a href="../screens/editar_cliente.html" class="simple-button simple-button--edit">Editar</a>
            </li>
            <li>
                <button class="simple-button simple-button--delete" type="button">Eliminar</button>
            </li>
        </ul>
    </td>`;
    //Se inserta el js al HTML
    linea.innerHTML = contenido;
    return linea;
};

//Ocupamos DOM, 
const table = document.querySelector("[data-table]")

//CRUD                      - METODOS HTTP
//Create    - Crear         - POST
//Read      - Leer          - GET
//Update    - Actualizar    - PUT/PATCH
//Delete    - Eliminar      - DELETE

const listaClientes = () => {
    const promise = new Promise((resolve,reject) => {
        const http = new XMLHttpRequest();
        //Abrir http recibe dos parametros que son los siguientes (metodo,url)
        http.open("GET","http://localhost:3000/perfil");
        
        http.send();
        
        http.onload = () => {
        const response = JSON.parse(http.response);
        if(http.status >= 400){
            reject(response)
            } else {
                resolve(response);
            }
        };
    });
    return promise;
};

listaClientes().then((data) => {
    data.forEach((perfil) => {
        const nuevaLinea = crearNuevaLinea(perfil.nombre, perfil.email);
        table.appendChild(nuevaLinea);        
        });
})
.catch((error) => alert("Ocurrió un error"));






